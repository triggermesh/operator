apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "triggermesh.fullname" . }}-backend
  labels:
    app.kubernetes.io/name: {{ include "triggermesh.name" . }}
    helm.sh/chart: {{ include "triggermesh.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "triggermesh.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "triggermesh.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: backend
    spec:
      containers:
        - name: dashboard
          image: "{{ .Values.image.registry }}/{{ .Values.backend.image }}:{{ .Values.backend.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: BASE_URL
              value: "https://{{ .Values.backend.baseHost }}"
            - name: AUTH0_URL
              value: "{{ .Values.backend.auth0_url }}"
            - name: TM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: GIT_HOOK_SECRET_NAME
            {{- if .Values.secrets.existingGitHookSecret }}
              value: {{ .Values.secrets.existingGitHookSecret }}
            {{- else }}
              value: {{ template "triggermesh.fullname" . }}-githook
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            - mountPath: /root/munu
              name: data
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          #   initialDelaySeconds: 60
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      imagePullSecrets:
      {{- if .Values.image.existingPullSecret }}
        - name: {{ .Values.image.existingPullSecret }}
      {{- else }}
        - name: {{ template "triggermesh.fullname" . }}-pullsecret
      {{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "triggermesh.fullname" . }}-data
      serviceAccountName: {{ include "triggermesh.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
